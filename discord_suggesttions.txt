// 'through event bus'

public struct EventBus;
public struct MyEvent;

class Program
{
    static void Main(string[] args)
    {
        using var world = World.Create();
        
        world.Add<EventBus>();
        
        world.Observer()
            .With<EventBus>().Singleton()
            .Event<MyEvent>()
            .Iter(it => Console.WriteLine("Something happened!"));
        
        world.Event<MyEvent>()
            .Id<EventBus>()
            .Entity(world.Singleton<EventBus>())
            .Emit();
    }
}

// 'create entities, not events and subscribe to onAppear'

// 'broadcast'

var entity = world.Entity();

world.Observer()
    .With(Ecs.Any)
    .Event<MyEvent>()
    .Iter(it => Console.WriteLine("Something happened! " + it.Event()));

world.Event<MyEvent>()
    .Entity(entity)
    .Emit();
